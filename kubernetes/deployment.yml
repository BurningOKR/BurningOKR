apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: b-okr
  name: burning-okr-app-deployment
  labels:
    app: burning-okr-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: burning-okr-app
  template:
    metadata:
      labels:
        app: burning-okr-app
    spec:
      containers:
        - name: burning-okr-postgres-database
          image: postgres:latest
          ports:
          - containerPort: 5432
          env:
          - name: POSTGRES_DB
            value: okr-db
          - name: POSTGRES_USER
            value: admin
          - name: POSTGRES_PASSWORD
            value: secret
          # resources:
          #   limits:
          #     cpu: 2
          #     memory: 2048Mi
          #     storage: 10Gi
          #   requests:
          #     cpu: 1
          #     memory: 1024Mi
          #     storage: 5Gi

        - name: burning-okr-app
          image: ghcr.io/burningokr/b-okr-be-dev:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          env: 
            - name: DATABASE_URL
              value: postgresql://localhost:5432/okr-db
          # resources:
          #   limits:
          #     cpu: 2
          #     memory: 2Gi
          #   requests:
          #     cpu: 1
          #     memory: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: b-okr
  name: burning-okr-postgres-volume
  labels:
    type: local
    app: postgres
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  storageClassName: manual
  hostPath:
    path: /mnt/data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: b-okr
  name: burning-okr-postgres-volume-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteMany
---
apiVersion: v1
kind: Service
metadata:
  namespace: b-okr
  name: burning-okr-app-service
spec:
  type: ClusterIP
  selector:
    app: burning-okr-app
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: b-okr
  name: burning-okr-app-ingress
  annotations:
    cert-manager.io/cluster-issuer: "bag-k8s-issuer"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - dev-burning-okr.bag-k8s.brockhaus-ag.de
      secretName: burning-okr-app-tls
  rules:
    - host: dev-burning-okr.bag-k8s.brockhaus-ag.de
      http:
        paths:
          - backend:
              service:
                name: burning-okr-app-service
                port:
                  number: 80
            path: /
            pathType: Prefix
