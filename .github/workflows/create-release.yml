name: Release App

on:
  push:
    branches: [ master ]

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read-version.outputs.version }}

    steps:
      - uses: actions/checkout@v2
    - name: Read package version
      id: read-version
      run: head -n 1 version.txt || PACKAGE_VERSION=$(sed 's/\d+.\d+.\d+//') && echo version=$PACKAGE_VERSION >> $GITHUB_OUTPUT

  release-app:
    runs-on: ubuntu-latest
    needs: get-version-number

    steps:
    - uses: actions/checkout@v3
    - name: Read changelog
      run: CHANGELOG=$(tail -n+3 version.txt) && echo $CHANGELOG && echo ::set-env name=CHANGELOG::$CHANGELOG
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: 1.8
    - name: Add execution privileges
      run: chmod +x ./gradlew
      working-directory: ./backend/burning-okr
    - name: Test
      run: ./gradlew check
      working-directory: ./backend/burning-okr
    - name: Build jar
      run: ./gradlew -PprojVersion="${{ needs.get-version-number.outputs.version-no }}" bootJar
      working-directory: ./backend/burning-okr
    - name: Build war
      run: ./gradlew -PprojVersion="${{ needs.get-version-number.outputs.version-no }}" bootWar
      working-directory: ./backend/burning-okr
    - name: Npm Setup
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - name: Npm Install
      run: npm install
      working-directory: ./frontend
    - name: Npm version
      run: npm version $PACKAGE_VERSION --allow-same-version
      working-directory: ./frontend
    - name: Npm Build
      run: npm run build-prod
      working-directory: ./frontend
    - name: Zip Frontend
      run: zip -r frontend.zip ./frontend/dist
    - name: Clean Frontend Build Directory
      run: rm -r ./frontend/dist
    - name: Npm Build Demo
      run: npm run build-demo
      working-directory: ./frontend
    - name: Zip Demo Frontend
      run: zip -r frontend-demo.zip ./frontend/dist
    - name: Clean Frontend Build Directory
      run: rm -r ./frontend/dist
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        release_name: Release ${{ env.PACKAGE_VERSION }}
        body: ${{ env.CHANGELOG }}
        draft: false
        prerelease: true
    - name: Upload Release Jar
      id: upload-release-jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./backend/burning-okr/burning-okr-app/build/libs/burning-okr-app-${{ env.PACKAGE_VERSION }}.jar
        asset_name: burning-okr-app-${{ env.PACKAGE_VERSION }}.jar
        asset_content_type: application/jar
    - name: Upload Release War
      id: upload-release-war
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./backend/burning-okr/burning-okr-app/build/libs/burning-okr-app-${{ env.PACKAGE_VERSION }}.war
        asset_name: burning-okr-app-${{ env.PACKAGE_VERSION }}.war
        asset_content_type: application/war
    - name: Upload Release Frontend Zip
      id: upload-release-frontend-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./frontend.zip
        asset_name: frontend.zip
        asset_content_type: application/zip
    - name: Upload Release Demo Frontend Zip
      id: upload-release-demo-zip-en
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./frontend-demo.zip
        asset_name: frontend-demo.zip
        asset_content_type: application/zip
