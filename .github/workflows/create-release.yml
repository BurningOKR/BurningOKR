name: Release App

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Read package version
      run: PACKAGE_VERSION=$(head -n 1 version.txt) && echo $PACKAGE_VERSION && echo ::set-env name=PACKAGE_VERSION::$PACKAGE_VERSION
      env: 
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - name: Read changelog
      run: CHANGELOG=$(tail -n+3 version.txt) && echo $CHANGELOG && echo ::set-env name=CHANGELOG::$CHANGELOG
      env: 
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Add execution privileges
      run: chmod +x ./gradlew
      working-directory: ./backend/burning-okr
    - name: Test
      run: ./gradlew check
      working-directory: ./backend/burning-okr
    - name: Build jar
      run: ./gradlew -PprojVersion="$PACKAGE_VERSION" bootJar
      working-directory: ./backend/burning-okr
    - name: Build war
      run: ./gradlew -PprojVersion="$PACKAGE_VERSION" bootWar
      working-directory: ./backend/burning-okr
    - name: Npm Setup
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Npm Install
      run: npm install
      working-directory: ./frontend
    - name: Npm version
      run: npm version $PACKAGE_VERSION --allow-same-version
      working-directory: ./frontend
    - name: Npm Build German
      run: npm run build-prod-new
      working-directory: ./frontend
    - name: Zip German Frontend
      run: zip -r frontend-de.zip ./frontend/dist
    - name: Clean Frontend Build Directory
      run: rm -r ./frontend/dist
    - name: Npm Build English
      run: npm run build-prod-en-new
      working-directory: ./frontend
    - name: Zip English Frontend
      run: zip -r frontend-en.zip ./frontend/dist
    - name: Clean Frontend Build Directory
      run: rm -r ./frontend/dist
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        release_name: Release ${{ env.PACKAGE_VERSION }}
        body: ${{ env.CHANGELOG }}
        draft: false
        prerelease: true
    - name: Upload Release Jar
      id: upload-release-jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./backend/burning-okr/burning-okr-app/build/libs/burning-okr-app-${{ env.PACKAGE_VERSION }}.jar
        asset_name: burning-okr-app-${{ env.PACKAGE_VERSION }}.jar
        asset_content_type: application/jar 
    - name: Upload Release War
      id: upload-release-war
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./backend/burning-okr/burning-okr-app/build/libs/burning-okr-app-${{ env.PACKAGE_VERSION }}.war
        asset_name: burning-okr-app-${{ env.PACKAGE_VERSION }}.war
        asset_content_type: application/war
    - name: Upload Release German Frontend Zip
      id: upload-release-frontend-zip-de
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./frontend-de.zip
        asset_name: frontend-de.zip
        asset_content_type: application/zip
    - name: Upload Release English Frontend Zip
      id: upload-release-frontend-zip-en
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./frontend-en.zip
        asset_name: frontend-en.zip
        asset_content_type: application/zip

