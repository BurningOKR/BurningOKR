buildscript {
    ext {
        swaggerVersion = '3.0.0'
        springdocVersion = '1.6.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'org.burningokr'

if (project.hasProperty('projVersion')) {
    version = project.projVersion
} else {
    version = '1.0.0'
}

bootRun.systemProperties = System.properties as Map<String, ?>

bootWar {
    enabled = true
}

war{
    enabled = true
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'junit:junit:4.13.2'
  compileOnly("org.projectlombok:lombok:1.18.22")
    testCompileOnly("org.projectlombok:lombok:1.18.22")
    annotationProcessor("org.projectlombok:lombok:1.18.22")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.22")

    implementation project(':burning-okr-model')
    implementation project(':burning-okr-data')
    implementation project(':burning-okr-logic')
    runtimeOnly project(':burning-okr-data')

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: swaggerVersion
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: swaggerVersion
    //implementation("org.springdoc:springdoc-openapi-ui:${springdocVersion}")

    implementation('org.springframework.boot:spring-boot-starter-web:2.6.4')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation ("org.springframework.boot:spring-boot-starter-security:2.6.4")
    implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.6.3'
    implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth', version: '2.5.1.RELEASE'
    implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.5.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation('org.codehaus.jackson:jackson-mapper-asl:1.9.13')

    implementation("org.springframework.boot:spring-boot-starter-data-jpa:2.6.4")
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.6.4'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.5'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation 'org.apache.poi:poi:5.0.0'

    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat:2.6.4')

    implementation "no.fiken.oss.junixsocket:junixsocket-common:1.0.2"
    implementation "no.fiken.oss.junixsocket:junixsocket-native-common:1.0.2"

    implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc'

    implementation('org.junit.jupiter:junit-jupiter:5.8.2')
}

springBoot{
    buildInfo()
}

configurations {
    providedRuntime
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}
